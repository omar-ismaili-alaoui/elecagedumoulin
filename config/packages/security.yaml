security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_USER:          ROLE_USER
        ROLE_UNKNOWN:       [ROLE_USER, ROLE_UNKNOWN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_PUBLISHER:     [ROLE_USER, ROLE_PUBLISHER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN:         [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        main:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/admin

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 31536000
                name: 'admin_remember_me'
                always_remember_me: true

            form_login:
                login_path: security_admin_login
                check_path: security_admin_login

            anonymous: true
            #http_basic: ~

            logout:
                path: /admin/logout
                target: /admin/login

            guard:
                authenticators:
                    - App\Security\AdminAuthenticator

        main:
            anonymous: true

            form_login:
                login_path: security_login
                check_path: security_login

            logout:
                path: security_logout
                target: el_welcome

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/profile, roles: ROLE_USER }
